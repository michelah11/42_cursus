
File: menu.c
This file contains functions for displaying the user interface (UI) elements, such as the menu and
instructions.

Functions:

1. get_projection_name(t_fdf *fdf):
    - Purpose: Retrieves the name of the current projection mode as a string.
    - Parameters:
        - t_fdf *fdf: The main structure containing the camera information.
    - Returns: A string representing the current projection mode.
    - Code Documentation:

    static char *get_projection_name(t_fdf *fdf)
	{
        char *projection;

        projection = "";
        if (fdf->cam->projection == ISOMETRIC)
            projection = "Isometric projection";    // Return isometric projection name
        else if (fdf->cam->projection == PERSPECTIVE)
            projection = "Perspective projection";    // Return perspective projection name
        else if (fdf->cam->projection == TOP)
            projection = "Top view";    // Return top view projection name
        return (projection);    // Return the name of the current projection mode
    }

2. print_menu(t_fdf *fdf):
    - Purpose: Displays the on-screen menu (UI - elements) with instructions and current settings.
    - Parameters:
        - t_fdf *fdf: The main structure containing MLX and window information.
    - Code Documentation:

    void print_menu(t_fdf *fdf)
	{
        int y = 0;
        char *projection;
        void *mlx, *win;

        mlx = fdf->mlx;
        win = fdf->win;
        projection = get_projection_name(fdf);    // Get the current projection name
        // Display the projection name at the top
        mlx_string_put(mlx, win, 50, y += 50, C_TEXT, projection);
        // Display control instructions
        mlx_string_put(mlx, win, 50, y += 35, C_TEXT, "Press 'ESC' to close");
        mlx_string_put(mlx, win, 50, y += 35, C_TEXT, "Zoom: press '-' or '+'");
        mlx_string_put(mlx, win, 50, y += 20, C_TEXT, "Move: press arrow keys");
        mlx_string_put(mlx, win, 50, y += 20, C_TEXT, "Rotate X: press 'S' or 'W'");
        mlx_string_put(mlx, win, 50, y += 20, C_TEXT, "Rotate Y: press 'Q' or 'E'");
        mlx_string_put(mlx, win, 50, y += 20, C_TEXT, "Rotate Z: press 'A' or 'D'");
        mlx_string_put(mlx, win, 50, y += 20, C_TEXT, "Z scale: press 'Z' or 'X'");
        mlx_string_put(mlx, win, 50, y += 20, C_TEXT, "(Z scale limited to 100%)");

        // Display projection change instructions
        mlx_string_put(mlx, win, 50, y += 35, C_TEXT, "To change projection view:");
        mlx_string_put(mlx, win, 50, y += 20, C_TEXT, "Isometric: press 'I'");
        mlx_string_put(mlx, win, 50, y += 20, C_TEXT, "Perspective: press 'P'");
        mlx_string_put(mlx, win, 50, y += 20, C_TEXT, "Top view: press 'O'");

        // Display color and reset instructions
        mlx_string_put(mlx, win, 50, y += 35, C_TEXT, "Colors: press 'SPACE'");
        mlx_string_put(mlx, win, 50, y += 35, C_TEXT, "Reset view: press 'R'");
    }

The function mlx_string_put() is part of the MiniLibX (MLX) library. This function is used to draw
text on the screen at a specified position within a window.

- Syntax of mlx_string_put():

int mlx_string_put(void *mlx_ptr, void *win_ptr, int x, int y, int color, char *string);

Parameters:
    - void *mlx_ptr: This is a pointer to the MLX instance, typically initialized by calling mlx_init().
			It represents the connection between your program and the X11 graphical system.
    - void *win_ptr: This is a pointer to the window where you want to draw the text. It's created by
			calling mlx_new_window(), which creates the window and returns a handle to it.
    - int x: The x-coordinate of the position where you want the text to start. This is measured in
			pixels from the left side of the window.
    - int y: The y-coordinate of the position where you want the text to start. This is measured in
			pixels from the top of the window.
    - int color: The color of the text, represented in hexadecimal format (RGB).
    - char *string: The actual text string that you want to display. This is a null-terminated string.

Return Value: The function returns an integer, which typically is 0 for success or an error code for
		failure. However, this return value is rarely used in practice since errors are uncommon.

- Behavior of mlx_string_put():

Draws Text: The function will draw the specified string of text at the position (x, y) in the window win_ptr, using the color color.

Coordinates: The text position is determined by the (x, y) coordinates. The x coordinate controls the horizontal position (left to right), and
        the y coordinate controls the vertical position (top to bottom). The (x, y) position corresponds to the top-left corner of the text.

No Background: mlx_string_put() only draws the text itself. There is no background or bounding box around the text; the text is simply drawn over
        whatever image or content is already present at the specified coordinates.

Redrawing: Since this function draws text directly onto the window, if the window is cleared or redrawn (for example, due to changes in rendering),
        the text will disappear unless you explicitly redraw it again.