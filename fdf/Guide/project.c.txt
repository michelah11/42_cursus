
File: project.c
This file contains functions for handling different projection modes, such as isometric and perspective, for rendering the 3D map.

Functions:

1. isometric(t_line *line):
    - Purpose: Applies isometric projection to a line.
    - Parameters:
    - t_line *line: The line structure containing the start and end points to project.
    - Code Documentation:

    static void isometric(t_line *line) {
        t_point new_start, new_end;

        // Calculate the new start coordinates using isometric projection
        new_start.x = (line->start.x - line->start.y) * cos(ANG_D_30);
        new_start.y = (line->start.x + line->start.y) * sin(ANG_D_30) - line->start.z;
        line->start.x = new_start.x;
        line->start.y = new_start.y;

        // Calculate the new end coordinates using isometric projection
        new_end.x = (line->end.x - line->end.y) * cos(ANG_D_30);
        new_end.y = (line->end.x + line->end.y) * sin(ANG_D_30) - line->end.z;
        line->end.x = new_end.x;
        line->end.y = new_end.y;
    }

2. perspective(t_line *line):
    - Purpose: Applies perspective projection to a line.
    - Parameters:
    - t_line *line: The line structure containing the start and end points to project.
    - Code Documentation:

    static void perspective(t_line *line) {
        t_point new_start, new_end;
        double z;

        rotate_x(line, 3 * -ANG_D_45);    // Apply rotation around the x-axis

        // Calculate the new start coordinates using perspective projection
        z = line->start.z + line->transform_z;
        new_start.x = line->start.x / z;
        new_start.y = line->start.y / z;
        line->start.x = new_start.x;
        line->start.y = -new_start.y;

        // Calculate the new end coordinates using perspective projection
        z = line->end.z + line->transform_z;
        new_end.x = line->end.x / z;
        new_end.y = line->end.y / z;
        line->end.x = new_end.x;
        line->end.y = -new_end.y;

        scale(line, line->transform_z);    // Scale the line based on the z-transform factor
    }

3. project(t_cam *cam, t_line *line):
    - Purpose: Projects a line based on the current camera projection mode.
    - Parameters:
    - t_cam *cam: The camera structure containing the projection settings.
    - t_line *line: The line structure containing the start and end points to project.
    - Code Documentation:

    void project(t_cam *cam, t_line *line) {
        if (cam->projection == ISOMETRIC)
            isometric(line);    // Apply isometric projection
        else if (cam->projection == PERSPECTIVE)
            perspective_line);    // Apply perspective projection
        else if (cam->projection == TOP)
            return;    // Top view projection does not modify the line
    }